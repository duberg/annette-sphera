annette {
  notification {
    debug = true
    mail {
      smtp {
        auth = true
        starttls.enable = true
        host = "mail.imc-msk.org"
        ssl.trust = "mail.imc-msk.org"
        port = 587
        #socketFactory.port = 587
        #socketFactory.class = "javax.net.ssl.SSLSocketFactory"
        connectiontimeout = 2000
        timeout = 6000
      }
      from = "noreply@mimc.global"
      username = "noreply"
      password = ""
    }
    sms {
      api-url = "https://app.mango-office.ru/vpbx/"
      api-key = "7wep7hjitdb3skhh8zjq77m77kn789v5"
      api-salt = ""
      route = "commands/sms"
      from-extension = 101 // идентификатор сотрудника (internal number)
    }
  }
}

akka.actor.deployment {

  /AuthenticationServiceRouter {
    router = round-robin-group
    routees.paths = ["/user/AuthenticationService"]
    cluster {
      enabled = on
      allow-local-routees = on
      use-role = "core"
    }
  }

  /AuthenticationService/login{
    router = round-robin-pool
    nr-of-instances = 20
  }

  /AuthenticationService/logout{
    router = round-robin-pool
    nr-of-instances = 20
  }

  /AuthenticationService/authenticate{
    router = round-robin-pool
    nr-of-instances = 20
  }

  /AuthenticationService/applicationState{
    router = round-robin-pool
    nr-of-instances = 20
  }


  /ApplicationServiceRouter {
    router = round-robin-group
    routees.paths = ["/user/ApplicationService"]
    cluster {
      enabled = on
      allow-local-routees = on
      use-role = "core"
    }
  }

 /ApplicationService/applicationServiceWorker {
   router = round-robin-pool
   nr-of-instances = 20
 }


}

annette {

  cluster = false

  core {
    AuthenticationService {
      rememberMeSessionTimeout = 14d
      sessionTimeout = 1h
    }

  }


  security {
    # для тестирования rest указываем debug = true
    debug = false
    # debugSession {
    #  session = "00000000-0000-00000-0000-0000000000000"
    #  user = "00000000-0000-00000-0000-0000000000000"
    #  tenant = abc
    #  application = def
    #  language = ru
    #}
  }
}

akka {
  actor {
    serializers {
      coreSerializer = "annette.core.serializer.CoreSerializer"
    }

    serialization-bindings {
      "annette.core.domain.tenancy.UserManager$CreatedUserEvt" = coreSerializer
      "annette.core.domain.tenancy.UserManager$UpdatedUserEvt" = coreSerializer
      "annette.core.domain.tenancy.UserManager$DeletedUserEvt" = coreSerializer
      "annette.core.domain.tenancy.actor.UsersState" = coreSerializer
      "annette.core.domain.application.Application$ApplicationCreatedEvt" = coreSerializer
      "annette.core.domain.application.Application$ApplicationUpdatedEvt" = coreSerializer
      "annette.core.domain.application.Application$ApplicationDeletedEvt" = coreSerializer
      "annette.core.domain.application.ApplicationManagerState" = coreSerializer
      "annette.core.security.verification.Verification$VerificationCreatedEvt" = coreSerializer
      "annette.core.security.verification.Verification$VerificationDeletedEvt" = coreSerializer
      "annette.core.security.verification.VerificationState" = coreSerializer
    }
  }
}

