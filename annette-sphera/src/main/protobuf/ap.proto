syntax = "proto2";

package imc;

option java_package = "annette.imc.serializer.proto";



message ApFillingFormEvtV1 {
    required UpdateApV1 up = 1;
}

message ApUpdateFileEvtV1 {
    required string apId = 1;
    required ApFileV1 file = 2;
}

message ApAddFileEvtV1 {
    required string ap = 1;
    required ApFileV1 file = 2;
}

message ApRemoveFileEvtV1 {
    required string ap = 1;
    required string fileId = 2;
}

message ApUpdateCriterionEvtV1 {
    required string ap = 1;
    required UpdateCriterionV1 criterion = 2;
}

message ApFinishCriterionEvtV1 {
    required string ap = 1;
    required int32 criterionId = 2;
}

message ApAddCriterionFileEvtV1 {
    required string ap = 1;
    required int32 criterionId = 2;
    required string fileId = 3;
}

message ApRemoveCriterionFileEvtV1 {
    required string ap = 1;
    required int32 criterionId = 2;
    required string fileId = 3;
}

message ApCleanCriterionEvtV1 {
    required string ap = 1;
    required int32 criterionId = 2;
}

message ApChangeStatusEvtV1 {
    required string ap = 1;
    required ApStatusV1 status = 2;
}

message ApAddExpertEvtV1 {
    required string ap = 1;
    required string userId = 2;
}

message ApRemoveExpertEvtV1 {
    required string ap = 1;
    required string userId = 2;
}

message ApUpdateBulletinEvtV1 {
    required string ap = 1;
    required UpdateBulletinV1 bulletin = 2;
}

message ApVoteEvtV1 {
    required string ap = 1;
    required string expert = 2;
}

message ApChangeManagerEvtV1 {
    required string ap = 1;
    required string manager = 2;
}


message ApCreatedEvtV1 {
    required ApV1 ap = 1;
}

message ApCreatedEvtV2 {
    required ApV2 ap = 1;
}

message ApCreatedEvtV3 {
    required ApV3 ap = 1;
}

message ApCreatedEvtV4 {
    required ApV4 ap = 1;
}

message ApCreatedEvtV5 {
    required ApV5 ap = 1;
}

message ApUpdatedEvtV1 {
    required ApV1 ap = 1;
}

message ApUpdatedEvtV2 {
    required ApV2 ap = 1;
}

message ApUpdatedEvtV3 {
    required ApV3 ap = 1;
}
message ApUpdatedEvtV4 {
    required ApV4 ap = 1;
}
message ApUpdatedEvtV5 {
    required ApV5 ap = 1;
}

message ApDeletedEvtV1 {
    required string id = 1;
}

message ApStateV1 {
    map<string, ApV1> storage = 1;
}

message ApStateV2 {
    map<string, ApV2> storage = 1;
}

message ApStateV3 {
    map<string, ApV3> storage = 1;
}

message ApStateV4 {
    map<string, ApV4> storage = 1;
}

message ApStateV5 {
    map<string, ApV5> storage = 1;
}

message ApV1 {
     required string id = 1;
     required ApDataV1 apData = 2;
     required ApStatusV1 apStatus = 3;
     repeated ApStatusV1 history = 4;
     map<string, ApFileV1> apFiles = 5;
     map<int32, CriterionV1> criterions = 6;
     required ExpertiseV1 expertise = 7;
}

message ApV2 {
    required string id = 1;
    required ApDataV1 apData = 2;
    required ApStatusV1 apStatus = 3;
    repeated ApStatusV1 history = 4;
    map<string, ApFileV1> apFiles = 5;
    map<int32, CriterionV1> criterions = 6;
    required ExpertiseV2 expertise = 7;
}

message ApV3 {
    required string id = 1;
    required ApDataV2 apData = 2;
    required ApStatusV1 apStatus = 3;
    repeated ApStatusV1 history = 4;
    map<string, ApFileV1> apFiles = 5;
    map<int32, CriterionV1> criterions = 6;
    required ExpertiseV3 expertise = 7;
}

message ApV4 {
    required string id = 1;
    required ApDataV3 apData = 2;
    required ApStatusV1 apStatus = 3;
    repeated ApStatusV1 history = 4;
    map<string, ApFileV1> apFiles = 5;
    map<int32, CriterionV1> criterions = 6;
    required ExpertiseV3 expertise = 7;
}

message ApV5 {
    required string id = 1;
    required ApDataV3 apData = 2;
    required ApStatusV1 apStatus = 3;
    repeated ApStatusV1 history = 4;
    required string projectManager = 5;
    map<string, ApFileV1> apFiles = 6;
    map<int32, CriterionV1> criterions = 7;
    required ExpertiseV3 expertise = 8;
}


message ApStringV1 {
    required string ru = 1;
    required string en = 2;
}
message ApDataV1 {
    optional ApStringV1 entityName = 1;
    optional ApStringV1 personName = 3;
    optional ApStringV1 personPosition = 5;
    optional string personEmail = 7;
    optional string personTel = 8;
    optional string country = 9;
    repeated OperationTypeV1 operationTypes = 10;
    optional string participation = 11;
    optional string financing = 12;
    optional bool isForLong = 13;
    optional string purpose = 14;
}

message ApDataV2 {
    optional ApStringV1 entityName = 1;
    optional ApStringV1 personName = 3;
    optional ApStringV1 personPosition = 5;
    optional string personEmail = 7;
    optional string personTel = 8;
    optional string country = 9;
    repeated OperationTypeV1 operationTypes = 10;
    repeated string financing = 12;
    optional bool isForLong = 13;
    optional string purpose = 14;
    optional ApStringV1 name = 15;
    optional string capital = 17;
    optional ApStringV1 applicantInfo = 18;
    optional string address = 19;

}

message ApDataV3 {
    optional ApStringV1 entityName = 1;
    optional ApStringV1 personName = 3;
    optional ApStringV1 personPosition = 5;
    optional string personEmail = 7;
    optional string personTel = 8;
    optional string country = 9;
    optional ApStringV1 operationTypes = 10;
    repeated string financing = 12;
    optional bool isForLong = 13;
    optional string purpose = 14;
    optional ApStringV1 name = 15;
    optional string capital = 17;
    optional ApStringV1 applicantInfo = 18;
    optional string address = 19;

}


message UpdateApV1 {
    required string id = 1;
    optional ApStringV1 entityName = 2;
    optional ApStringV1 personName = 4;
    optional ApStringV1 personPosition = 6;
    optional string personEmail = 8;
    optional string personTel = 9;
    optional string country = 10;
    optional ApStringV1 operationTypes = 11;
    repeated string financing = 13;
    optional bool isForLong = 14;
    optional string purpose = 15;
    optional ApStringV1 name = 16;
    optional string capital = 18;
    optional ApStringV1 applicantInfo = 19;
    optional string address = 20;

}

message OperationTypeV1 {
    required string nameMessage = 1;
    optional ApStringV1 details = 2;
}

message ApStatusV1 {
    required string nameMessage = 1;
    required string changeTime = 2;
    optional string userId = 3;
    optional string comment = 4;
    optional ApStringV1 resultDecision = 5;
}

message ApFileV1 {
    required string id = 1;
    required string name = 2;
    required string lang = 3;
    required string fileType = 4;
    required string comments = 5;
}

message CriterionV1 {
    required int32 id = 1;
    required ApStringV1 description = 2;
    repeated string attachment = 4;
    required bool isFinished = 5;
}

message UpdateCriterionV1 {
    required int32 id = 1;
    optional string descriptionRu = 2;
    optional string descriptionEn = 3;
}

message ExpertiseV1 {
    repeated string experts = 1;
    map<string, BulletinV1> bulletins = 2;
}

message ExpertiseV2 {
    repeated string experts = 1;
    map<string, BulletinV2> bulletins = 2;
}

message ExpertiseV3 {
    repeated string experts = 1;
    map<string, BulletinV3> bulletins = 2;
}

message BulletinV1 {
    required string expertId = 1;
    required string date = 2;
    required ApStringV1 applicant = 3;
    optional ApStringV1 rejection = 5;
    map<int32, VoteV1> criterions = 7;
    optional VoteV1 finalResult = 8;
    optional ScoresV1 scores = 9;
    required bool isFinished = 10;
}

message BulletinV2 {
    required string expertId = 1;
    required string date = 2;
    map<int32, int32> criterions = 7;
    optional string pluses = 11;
    optional string minuses = 12;
    optional bool finalResult = 15;
    optional string positiveConclusion = 13;
    optional string negativeConclusion = 14;
    optional bool rejection = 5;
    optional ScoresV1 scores = 9;
    required bool isFinished = 10;

}

message BulletinV3 {
    required string expertId = 1;
    required string date = 2;
    map<int32, VoteV2> criterions = 7;
    optional bool finalResult = 15;
    optional string positiveConclusion = 13;
    optional string negativeConclusion = 14;
    optional bool rejection = 5;
    optional ScoresV1 scores = 9;
    required bool isFinished = 10;

}


message UpdateBulletinV1 {
    required string expertId = 1;
    map<int32, int32> criterions = 2;
    optional string pluses = 3;
    optional string minuses = 4;
    optional bool finalResult = 5;
    optional string positiveConclusion = 6;
    optional string negativeConclusion = 7;
    optional bool rejection = 8;
    optional ScoresV1 scores = 9;
    optional bool isFinished = 10;
}

message VoteV1 {
    required string nameMessage = 1;
    required bool decision = 2;
    required string comment = 3;
}

message VoteV2 {
    required int32 decision = 1;
    required string pluses = 2;
    required string minuses = 3;
}

message ScoresV1 {
    required int32 medical = 1;
    required int32 educational = 2;
    required int32 scientific = 3;
}
